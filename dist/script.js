(()=>{"use strict";(()=>{const e=function(){var e,t,n=document.querySelector(".quote"),o=document.querySelector(".author"),r=document.querySelector(".refresh-quote"),a=function n(o,r){var a=Math.floor(Math.random()*(r-o))+o;return a!==t?(t=a,a):n(0,e)},c=function(){fetch("./assets/json/quotes.json").then((function(e){return e.json()})).then((function(t){e=t.length;var r=a(0,e);n.textContent=t[r].quote,o.textContent=t[r].author})).catch((function(){n.textContent="An Error Occurred, Please Try Again Later (:"}))};c(),r.addEventListener("click",c)},t=function(){var e=document.querySelector(".city"),t=document.querySelector(".temperature"),n=document.querySelector(".temperature-info"),o=document.querySelector(".weather-description"),r=document.querySelector(".weather-icon"),a=document.querySelector(".humidity-info"),c=document.querySelector(".wind-info"),i=function(e){t.hidden=e,n.hidden=e,a.parentNode.hidden=e,c.parentNode.hidden=e,r.hidden=e};localStorage.getItem("city")?fetch("https://api.openweathermap.org/data/2.5/weather?q=".concat(localStorage.getItem("city"),"&lang=en&appid=85d06021f576a4e46bc2f5084d6a6e87&units=metric")).then((function(e){return e.json()})).then((function(n){i(!1),r.classList.add("owf-".concat(n.weather[0].id)),t.textContent="".concat(Math.round(n.main.temp),"Â°C"),o.textContent=n.weather[0].description[0].toUpperCase()+n.weather[0].description.slice(1),a.textContent=n.main.humidity,c.textContent=n.wind.speed;var u=localStorage.getItem("city");e.textContent=u[0].toUpperCase()+u.slice(1)})).catch((function(){o.textContent="City not found",e.textContent="Please try again",i(!0)})):(e.textContent="[Enter City]",o.textContent="Weather",a.parentNode.hidden=!0,c.parentNode.hidden=!0)};function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}const o=function(){for(var e=document.querySelector(".greeting"),t=document.querySelector(".slide-left"),o=document.querySelector(".slide-right"),r=document.querySelector(".time"),a=document.querySelector(".date"),c=(d=Array(20).keys(),function(e){if(Array.isArray(e))return n(e)}(d)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(d)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?n(e,t):void 0}}(d)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(e){return e+1<10?"0".concat(e+1):"".concat(e+1)})).sort((function(){return Math.random()-.5})),i=[],u=0;u<24;u+=1)u<6?i.push('url("assets/images/night/'.concat(c[u%6],'.jpg")')):u<12?i.push('url("assets/images/morning/'.concat(c[u%6],'.jpg")')):u<18?i.push('url("assets/images/day/'.concat(c[u%6],'.jpg")')):i.push('url("assets/images/evening/'.concat(c[u%6],'.jpg")'));var d,s=function(){var t=(new Date).getHours(),n=document.createElement("img");n.src="".concat(i[t].slice(5,-2)),n.addEventListener("load",(function(){document.body.style.backgroundImage=i[t]})),e.textContent=t<6?"Good Night, ":t<12?"Good Morning, ":t<18?"Good Afternoon, ":"Good Evening, "};s();var l=0,m=function(){var e=(new Date).getHours();e+l<0&&(l=23-e),e+l>23&&(l=-e);var n=document.createElement("img");n.src="".concat(i[e+l].slice(5,-2)),n.addEventListener("load",(function(){document.body.style.backgroundImage=i[e+l]})),t.disabled=!0,o.disabled=!0,setTimeout((function(){t.disabled=!1,o.disabled=!1}),1e3)};t.addEventListener("click",(function(){l-=1,m()})),o.addEventListener("click",(function(){l+=1,m()})),function e(){var t=new Date,n=t.getMonth(),o=t.getDate(),c=t.getDay(),i=t.getHours(),u=t.getMinutes(),d=t.getSeconds();0===u&&0===d&&s(),r.innerText="".concat(i,":").concat(+u<10?"0":"").concat(u,":").concat(+d<10?"0":"").concat(d),a.innerText="".concat(["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][c],", ").concat(o," ").concat(["January","February","March","April","May","June","July","August","September","October","November","December"][n]),setTimeout(e,1e3)}()};document.addEventListener("DOMContentLoaded",(function(){var n,r,a;n=document.querySelector(".name"),r=document.querySelector(".focus"),a=document.querySelector(".city"),n.textContent=localStorage.getItem("name")?localStorage.getItem("name"):"[Enter Name]",r.textContent=localStorage.getItem("focus")?localStorage.getItem("focus"):"[Enter Focus]",n.addEventListener("click",(function(){n.textContent=""})),n.addEventListener("blur",(function(e){e.target.innerText?(localStorage.setItem("name",e.target.innerText),n.textContent=e.target.innerText):n.textContent=localStorage.getItem("name")?localStorage.getItem("name"):"[Enter Name]"})),n.addEventListener("keydown",(function(e){"Enter"!==e.key&&13!==e.keyCode||(localStorage.setItem("name",e.target.innerText),n.blur())})),r.addEventListener("click",(function(){r.textContent=""})),r.addEventListener("blur",(function(e){e.target.innerText?(localStorage.setItem("focus",e.target.innerText),r.textContent=e.target.innerText):r.textContent=localStorage.getItem("focus")?localStorage.getItem("focus"):"[Enter City]"})),r.addEventListener("keydown",(function(e){"Enter"!==e.key&&13!==e.keyCode||(localStorage.setItem("focus",e.target.innerText),r.blur())})),a.addEventListener("click",(function(){a.textContent=""})),a.addEventListener("blur",(function(e){e.target.innerText&&localStorage.setItem("city",e.target.innerText),t()})),a.addEventListener("keydown",(function(e){"Enter"!==e.key&&13!==e.keyCode||(localStorage.setItem("city",e.target.innerText),a.blur())})),e(),t(),o()})),document.body.style.height="".concat(window.innerHeight,"px"),window.addEventListener("resize",(function(){document.body.style.height="".concat(window.innerHeight,"px")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,